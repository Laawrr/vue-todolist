{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      newTask: '',\n      tasks: [],\n      editIndex: null,\n      editedTask: ''\n    };\n  },\n  methods: {\n    addTask() {\n      if (this.newTask.trim()) {\n        this.tasks.push(this.newTask.trim());\n        this.newTask = '';\n      }\n    },\n    removeTask(index) {\n      this.tasks.splice(index, 1);\n      if (this.editIndex === index) {\n        this.cancelEdit();\n      }\n    },\n    editTask(index) {\n      this.editIndex = index;\n      this.editedTask = this.tasks[index];\n    },\n    saveTask(index) {\n      if (this.editedTask.trim()) {\n        this.$set(this.tasks, index, this.editedTask.trim());\n        this.cancelEdit();\n      }\n    },\n    cancelEdit() {\n      this.editIndex = null;\n      this.editedTask = '';\n    }\n  }\n};","map":{"version":3,"names":["data","newTask","tasks","editIndex","editedTask","methods","addTask","trim","push","removeTask","index","splice","cancelEdit","editTask","saveTask","$set"],"sources":["C:\\Users\\Lawr\\Desktop\\it110\\it110-todolist\\src\\components\\TodoList.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <v-row class=\"mb-4\">\r\n      <v-col cols=\"12\">\r\n        <v-text-field\r\n          v-model=\"newTask\"\r\n          label=\"Add a new task\"\r\n          outlined\r\n          dense\r\n          class=\"task-input\"\r\n          @keyup.enter=\"addTask\"\r\n        ></v-text-field>\r\n        <v-btn @click=\"addTask\" color=\"primary\" class=\"mt-2\">\r\n          Add Task\r\n        </v-btn>\r\n      </v-col>\r\n    </v-row>\r\n\r\n    <v-row>\r\n      <v-col cols=\"12\">\r\n        <v-list>\r\n          <v-list-item-group v-if=\"tasks.length\">\r\n            <v-list-item v-for=\"(task, index) in tasks\" :key=\"index\">\r\n              <v-list-item-content>\r\n                <v-text-field\r\n                  v-if=\"editIndex === index\"\r\n                  v-model=\"editedTask\"\r\n                  outlined\r\n                  dense\r\n                  class=\"task-input\"\r\n                  @keyup.enter=\"saveTask(index)\"\r\n                  @keyup.esc=\"cancelEdit\"\r\n                ></v-text-field>\r\n                <v-list-item-title v-else>\r\n                  {{ task }}\r\n                </v-list-item-title>\r\n              </v-list-item-content>\r\n              <v-list-item-action>\r\n                <v-btn @click=\"editTask(index)\" icon v-if=\"editIndex !== index\">\r\n                  <v-icon>mdi-pencil</v-icon>\r\n                </v-btn>\r\n                <v-btn @click=\"saveTask(index)\" icon v-if=\"editIndex === index\">\r\n                  <v-icon>mdi-check</v-icon>\r\n                </v-btn>\r\n                <v-btn @click=\"removeTask(index)\" icon>\r\n                  <v-icon>mdi-delete</v-icon>\r\n                </v-btn>\r\n              </v-list-item-action>\r\n            </v-list-item>\r\n          </v-list-item-group>\r\n          <v-list-item v-else>\r\n            <v-list-item-content class=\"text-center\">\r\n              No tasks available\r\n            </v-list-item-content>\r\n          </v-list-item>\r\n        </v-list>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      newTask: '',\r\n      tasks: [],\r\n      editIndex: null,\r\n      editedTask: ''\r\n    };\r\n  },\r\n  methods: {\r\n    addTask() {\r\n      if (this.newTask.trim()) {\r\n        this.tasks.push(this.newTask.trim());\r\n        this.newTask = '';\r\n      }\r\n    },\r\n    removeTask(index) {\r\n      this.tasks.splice(index, 1);\r\n      if (this.editIndex === index) {\r\n        this.cancelEdit();\r\n      }\r\n    },\r\n    editTask(index) {\r\n      this.editIndex = index;\r\n      this.editedTask = this.tasks[index];\r\n    },\r\n    saveTask(index) {\r\n      if (this.editedTask.trim()) {\r\n        this.$set(this.tasks, index, this.editedTask.trim());\r\n        this.cancelEdit();\r\n      }\r\n    },\r\n    cancelEdit() {\r\n      this.editIndex = null;\r\n      this.editedTask = '';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.task-input {\r\n  max-width: 400px;\r\n  margin-right: 16px;\r\n}\r\n\r\n.v-list-item {\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.v-list-item-title {\r\n  font-size: 1rem;\r\n}\r\n\r\n.v-btn {\r\n  margin-left: 8px;\r\n}\r\n\r\n.v-list-item-action {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n</style>\r\n"],"mappings":";AA8DA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE,IAAI;MACfC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,OAAOA,CAAA,EAAG;MACR,IAAI,IAAI,CAACL,OAAO,CAACM,IAAI,CAAC,CAAC,EAAE;QACvB,IAAI,CAACL,KAAK,CAACM,IAAI,CAAC,IAAI,CAACP,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC;QACpC,IAAI,CAACN,OAAM,GAAI,EAAE;MACnB;IACF,CAAC;IACDQ,UAAUA,CAACC,KAAK,EAAE;MAChB,IAAI,CAACR,KAAK,CAACS,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;MAC3B,IAAI,IAAI,CAACP,SAAQ,KAAMO,KAAK,EAAE;QAC5B,IAAI,CAACE,UAAU,CAAC,CAAC;MACnB;IACF,CAAC;IACDC,QAAQA,CAACH,KAAK,EAAE;MACd,IAAI,CAACP,SAAQ,GAAIO,KAAK;MACtB,IAAI,CAACN,UAAS,GAAI,IAAI,CAACF,KAAK,CAACQ,KAAK,CAAC;IACrC,CAAC;IACDI,QAAQA,CAACJ,KAAK,EAAE;MACd,IAAI,IAAI,CAACN,UAAU,CAACG,IAAI,CAAC,CAAC,EAAE;QAC1B,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACb,KAAK,EAAEQ,KAAK,EAAE,IAAI,CAACN,UAAU,CAACG,IAAI,CAAC,CAAC,CAAC;QACpD,IAAI,CAACK,UAAU,CAAC,CAAC;MACnB;IACF,CAAC;IACDA,UAAUA,CAAA,EAAG;MACX,IAAI,CAACT,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACC,UAAS,GAAI,EAAE;IACtB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}