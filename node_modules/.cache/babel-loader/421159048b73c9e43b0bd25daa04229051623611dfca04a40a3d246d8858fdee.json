{"ast":null,"code":"import { resolveComponent as _resolveComponent, withKeys as _withKeys, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_list_item_title = _resolveComponent(\"v-list-item-title\");\n  const _component_v_list_item_content = _resolveComponent(\"v-list-item-content\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_list_item_action = _resolveComponent(\"v-list-item-action\");\n  const _component_v_list_item = _resolveComponent(\"v-list-item\");\n  const _component_v_list_item_group = _resolveComponent(\"v-list-item-group\");\n  const _component_v_list = _resolveComponent(\"v-list\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"12\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_text_field, {\n          modelValue: $data.newTask,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newTask = $event),\n          label: \"Add a new task\",\n          onKeyup: _withKeys($options.addTask, [\"enter\"])\n        }, null, 8 /* PROPS */, [\"modelValue\", \"onKeyup\"]), _createVNode(_component_v_btn, {\n          onClick: $options.addTask,\n          color: \"primary\",\n          class: \"mt-2\"\n        }, {\n          default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\" Add Task \")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"12\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_list, null, {\n          default: _withCtx(() => [$data.tasks.length ? (_openBlock(), _createBlock(_component_v_list_item_group, {\n            key: 0\n          }, {\n            default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, (task, index) => {\n              return _openBlock(), _createBlock(_component_v_list_item, {\n                key: index\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_list_item_content, null, {\n                  default: _withCtx(() => [$data.editIndex === index ? (_openBlock(), _createBlock(_component_v_text_field, {\n                    key: 0,\n                    modelValue: $data.editedTask,\n                    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.editedTask = $event),\n                    onKeyup: [_withKeys($event => $options.saveTask(index), [\"enter\"]), _withKeys($options.cancelEdit, [\"esc\"])]\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"onKeyup\"])) : (_openBlock(), _createBlock(_component_v_list_item_title, {\n                    key: 1\n                  }, {\n                    default: _withCtx(() => [_createTextVNode(_toDisplayString(task), 1 /* TEXT */)]),\n                    _: 2 /* DYNAMIC */\n                  }, 1024 /* DYNAMIC_SLOTS */))]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_list_item_action, null, {\n                  default: _withCtx(() => [$data.editIndex !== index ? (_openBlock(), _createBlock(_component_v_btn, {\n                    key: 0,\n                    onClick: $event => $options.editTask(index),\n                    icon: \"\"\n                  }, {\n                    default: _withCtx(() => [_createVNode(_component_v_icon, null, {\n                      default: _withCtx(() => [...(_cache[3] || (_cache[3] = [_createTextVNode(\"mdi-pencil\")]))]),\n                      _: 1 /* STABLE */\n                    })]),\n                    _: 2 /* DYNAMIC */\n                  }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), $data.editIndex === index ? (_openBlock(), _createBlock(_component_v_btn, {\n                    key: 1,\n                    onClick: $event => $options.saveTask(index),\n                    icon: \"\"\n                  }, {\n                    default: _withCtx(() => [_createVNode(_component_v_icon, null, {\n                      default: _withCtx(() => [...(_cache[4] || (_cache[4] = [_createTextVNode(\"mdi-check\")]))]),\n                      _: 1 /* STABLE */\n                    })]),\n                    _: 2 /* DYNAMIC */\n                  }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_v_btn, {\n                    onClick: $event => $options.removeTask(index),\n                    icon: \"\"\n                  }, {\n                    default: _withCtx(() => [_createVNode(_component_v_icon, null, {\n                      default: _withCtx(() => [...(_cache[5] || (_cache[5] = [_createTextVNode(\"mdi-delete\")]))]),\n                      _: 1 /* STABLE */\n                    })]),\n                    _: 2 /* DYNAMIC */\n                  }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */);\n            }), 128 /* KEYED_FRAGMENT */))]),\n            _: 1 /* STABLE */\n          })) : (_openBlock(), _createBlock(_component_v_list_item, {\n            key: 1\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_list_item_content, null, {\n              default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\"No tasks available\")])),\n              _: 1 /* STABLE */\n            })]),\n            _: 1 /* STABLE */\n          }))]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","default","_withCtx","_createVNode","_component_v_row","_component_v_col","cols","_component_v_text_field","modelValue","$data","newTask","_cache","$event","label","onKeyup","_withKeys","$options","addTask","_component_v_btn","onClick","color","class","_createTextVNode","_","_component_v_list","tasks","length","_component_v_list_item_group","key","_createElementBlock","_Fragment","_renderList","task","index","_component_v_list_item","_component_v_list_item_content","editIndex","editedTask","saveTask","cancelEdit","_component_v_list_item_title","_toDisplayString","_component_v_list_item_action","editTask","icon","_component_v_icon","_createCommentVNode","removeTask"],"sources":["C:\\Users\\Lawr\\Desktop\\it110\\it110-todolist\\src\\components\\TodoList.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <v-row>\r\n      <v-col cols=\"12\">\r\n        <v-text-field\r\n          v-model=\"newTask\"\r\n          label=\"Add a new task\"\r\n          @keyup.enter=\"addTask\"\r\n        ></v-text-field>\r\n        <v-btn @click=\"addTask\" color=\"primary\" class=\"mt-2\">\r\n          Add Task\r\n        </v-btn>\r\n      </v-col>\r\n    </v-row>\r\n\r\n    <v-row>\r\n      <v-col cols=\"12\">\r\n        <v-list>\r\n          <v-list-item-group v-if=\"tasks.length\">\r\n            <v-list-item v-for=\"(task, index) in tasks\" :key=\"index\">\r\n              <v-list-item-content>\r\n                <v-text-field\r\n                  v-if=\"editIndex === index\"\r\n                  v-model=\"editedTask\"\r\n                  @keyup.enter=\"saveTask(index)\"\r\n                  @keyup.esc=\"cancelEdit\"\r\n                ></v-text-field>\r\n                <v-list-item-title v-else>\r\n                  {{ task }}\r\n                </v-list-item-title>\r\n              </v-list-item-content>\r\n              <v-list-item-action>\r\n                <v-btn @click=\"editTask(index)\" icon v-if=\"editIndex !== index\">\r\n                  <v-icon>mdi-pencil</v-icon>\r\n                </v-btn>\r\n                <v-btn @click=\"saveTask(index)\" icon v-if=\"editIndex === index\">\r\n                  <v-icon>mdi-check</v-icon>\r\n                </v-btn>\r\n                <v-btn @click=\"removeTask(index)\" icon>\r\n                  <v-icon>mdi-delete</v-icon>\r\n                </v-btn>\r\n              </v-list-item-action>\r\n            </v-list-item>\r\n          </v-list-item-group>\r\n          <v-list-item v-else>\r\n            <v-list-item-content>No tasks available</v-list-item-content>\r\n          </v-list-item>\r\n        </v-list>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      newTask: '',\r\n      tasks: [],\r\n      editIndex: null,\r\n      editedTask: ''\r\n    };\r\n  },\r\n  methods: {\r\n    addTask() {\r\n      if (this.newTask.trim()) {\r\n        this.tasks.push(this.newTask.trim());\r\n        this.newTask = '';\r\n      }\r\n    },\r\n    removeTask(index) {\r\n      this.tasks.splice(index, 1);\r\n      if (this.editIndex === index) {\r\n        this.cancelEdit();\r\n      }\r\n    },\r\n    editTask(index) {\r\n      this.editIndex = index;\r\n      this.editedTask = this.tasks[index];\r\n    },\r\n    saveTask(index) {\r\n      if (this.editedTask.trim()) {\r\n        this.$set(this.tasks, index, this.editedTask.trim());\r\n        this.cancelEdit();\r\n      }\r\n    },\r\n    cancelEdit() {\r\n      this.editIndex = null;\r\n      this.editedTask = '';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Add any custom styling here */\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}