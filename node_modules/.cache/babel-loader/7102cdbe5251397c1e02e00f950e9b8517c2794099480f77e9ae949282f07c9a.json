{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      newTask: '',\n      tasks: [],\n      editIndex: null,\n      editedTask: ''\n    };\n  },\n  created() {\n    this.loadTasks();\n  },\n  methods: {\n    addTask() {\n      if (this.newTask.trim()) {\n        this.tasks.push(this.newTask.trim());\n        this.newTask = '';\n        this.saveTasks();\n      }\n    },\n    removeTask(index) {\n      this.tasks.splice(index, 1);\n      if (this.editIndex === index) {\n        this.cancelEdit();\n      }\n      this.saveTasks();\n    },\n    editTask(index) {\n      this.editIndex = index;\n      this.editedTask = this.tasks[index];\n    },\n    saveTask(index) {\n      if (this.editedTask.trim()) {\n        this.tasks[index] = this.editedTask.trim(); // Directly update the task\n        this.cancelEdit();\n        this.saveTasks();\n      }\n    },\n    cancelEdit() {\n      this.editIndex = null;\n      this.editedTask = '';\n    },\n    saveTasks() {\n      localStorage.setItem('tasks', JSON.stringify(this.tasks));\n    },\n    loadTasks() {\n      const savedTasks = localStorage.getItem('tasks');\n      if (savedTasks) {\n        this.tasks = JSON.parse(savedTasks);\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","newTask","tasks","editIndex","editedTask","created","loadTasks","methods","addTask","trim","push","saveTasks","removeTask","index","splice","cancelEdit","editTask","saveTask","localStorage","setItem","JSON","stringify","savedTasks","getItem","parse"],"sources":["C:\\Users\\Lawr\\Desktop\\it110\\it110-todolist\\src\\components\\TodoList.vue"],"sourcesContent":["<template>\r\n  <v-container fluid>\r\n    <v-row>\r\n      <v-col cols=\"12\" md=\"6\" class=\"mx-auto\">\r\n        <v-card class=\"pa-4\" elevation=\"2\">\r\n          <v-text-field\r\n            v-model=\"newTask\"\r\n            label=\"Add a new task\"\r\n            outlined\r\n            dense\r\n            class=\"task-input\"\r\n            @keyup.enter=\"addTask\"\r\n          ></v-text-field>\r\n          <v-btn @click=\"addTask\" color=\"primary\" class=\"mt-2\">\r\n            Add Task\r\n          </v-btn>\r\n\r\n          <v-list class=\"mt-4\">\r\n            <v-list-item-group v-if=\"tasks.length\">\r\n              <v-list-item \r\n                v-for=\"(task, index) in tasks\" \r\n                :key=\"index\" \r\n                class=\"task-list-item\"\r\n              >\r\n                <v-list-item-content>\r\n                  <v-text-field\r\n                    v-if=\"editIndex === index\"\r\n                    v-model=\"editedTask\"\r\n                    outlined\r\n                    dense\r\n                    class=\"task-input\"\r\n                    @keyup.enter=\"saveTask(index)\"\r\n                    @keyup.esc=\"cancelEdit\"\r\n                  ></v-text-field>\r\n                  <v-list-item-title v-else>\r\n                    {{ task }}\r\n                  </v-list-item-title>\r\n                </v-list-item-content>\r\n                <v-list-item-action>\r\n                  <v-btn @click=\"editTask(index)\" class=\"mx-1 bg-pink-lighten-3\" v-if=\"editIndex !== index\">\r\n                    Edit\r\n                  </v-btn>\r\n                  <v-btn @click=\"saveTask(index)\" class=\"mx-1\" v-if=\"editIndex === index\">\r\n                    Save\r\n                  </v-btn>\r\n                  <v-btn @click=\"removeTask(index)\"  class=\"mx-1 pink-darken-4\">\r\n                    Delete\r\n                  </v-btn>\r\n                </v-list-item-action>\r\n              </v-list-item>\r\n            </v-list-item-group>\r\n            <v-list-item v-else>\r\n              <v-list-item-content class=\"text-center\">\r\n                No tasks available\r\n              </v-list-item-content>\r\n            </v-list-item>\r\n          </v-list>\r\n        </v-card>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      newTask: '',\r\n      tasks: [],\r\n      editIndex: null,\r\n      editedTask: ''\r\n    };\r\n  },\r\n  created() {\r\n    this.loadTasks();\r\n  },\r\n  methods: {\r\n    addTask() {\r\n      if (this.newTask.trim()) {\r\n        this.tasks.push(this.newTask.trim());\r\n        this.newTask = '';\r\n        this.saveTasks();\r\n      }\r\n    },\r\n    removeTask(index) {\r\n      this.tasks.splice(index, 1);\r\n      if (this.editIndex === index) {\r\n        this.cancelEdit();\r\n      }\r\n      this.saveTasks();\r\n    },\r\n    editTask(index) {\r\n      this.editIndex = index;\r\n      this.editedTask = this.tasks[index];\r\n    },\r\n    saveTask(index) {\r\n        if (this.editedTask.trim()) {\r\n            this.tasks[index] = this.editedTask.trim(); // Directly update the task\r\n            this.cancelEdit();\r\n            this.saveTasks();\r\n        }\r\n    },\r\n    cancelEdit() {\r\n      this.editIndex = null;\r\n      this.editedTask = '';\r\n    },\r\n    saveTasks() {\r\n      localStorage.setItem('tasks', JSON.stringify(this.tasks));\r\n    },\r\n    loadTasks() {\r\n      const savedTasks = localStorage.getItem('tasks');\r\n      if (savedTasks) {\r\n        this.tasks = JSON.parse(savedTasks);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.task-input {\r\n  max-width: 100%; /* Adjusted for better responsiveness */\r\n  margin-right: 16px;\r\n}\r\n\r\n.v-list-item {\r\n  border-bottom: 1px solid #e0e0e0;\r\n  transition: background-color 0.3s, box-shadow 0.3s;\r\n}\r\n\r\n.v-list-item:hover {\r\n  background-color: #f5f5f5; /* Light grey background on hover */\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Subtle shadow on hover */\r\n}\r\n\r\n.v-list-item-title {\r\n  font-size: 1rem;\r\n}\r\n\r\n.v-btn {\r\n  margin-left: 8px;\r\n  text-transform: none; /* Keeps the text in its normal case */\r\n  border-radius: 4px; /* Makes the button rectangular */\r\n  transition: background-color 0.3s, box-shadow 0.3s; /* Smooth transition for hover effect */\r\n}\r\n\r\n.v-btn:hover {\r\n  background-color: rgba(0, 0, 0, 0.1); /* Light background on hover */\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Slight shadow on hover */\r\n}\r\n\r\n.v-list-item-action {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.v-list-item-content {\r\n  text-align: left; /* Align text to the left */\r\n}\r\n\r\n.v-card {\r\n  padding: 16px;\r\n}\r\n</style>\r\n"],"mappings":";AAgEA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE,IAAI;MACfC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC,CAAC;EAClB,CAAC;EACDC,OAAO,EAAE;IACPC,OAAOA,CAAA,EAAG;MACR,IAAI,IAAI,CAACP,OAAO,CAACQ,IAAI,CAAC,CAAC,EAAE;QACvB,IAAI,CAACP,KAAK,CAACQ,IAAI,CAAC,IAAI,CAACT,OAAO,CAACQ,IAAI,CAAC,CAAC,CAAC;QACpC,IAAI,CAACR,OAAM,GAAI,EAAE;QACjB,IAAI,CAACU,SAAS,CAAC,CAAC;MAClB;IACF,CAAC;IACDC,UAAUA,CAACC,KAAK,EAAE;MAChB,IAAI,CAACX,KAAK,CAACY,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;MAC3B,IAAI,IAAI,CAACV,SAAQ,KAAMU,KAAK,EAAE;QAC5B,IAAI,CAACE,UAAU,CAAC,CAAC;MACnB;MACA,IAAI,CAACJ,SAAS,CAAC,CAAC;IAClB,CAAC;IACDK,QAAQA,CAACH,KAAK,EAAE;MACd,IAAI,CAACV,SAAQ,GAAIU,KAAK;MACtB,IAAI,CAACT,UAAS,GAAI,IAAI,CAACF,KAAK,CAACW,KAAK,CAAC;IACrC,CAAC;IACDI,QAAQA,CAACJ,KAAK,EAAE;MACZ,IAAI,IAAI,CAACT,UAAU,CAACK,IAAI,CAAC,CAAC,EAAE;QACxB,IAAI,CAACP,KAAK,CAACW,KAAK,IAAI,IAAI,CAACT,UAAU,CAACK,IAAI,CAAC,CAAC,EAAE;QAC5C,IAAI,CAACM,UAAU,CAAC,CAAC;QACjB,IAAI,CAACJ,SAAS,CAAC,CAAC;MACpB;IACJ,CAAC;IACDI,UAAUA,CAAA,EAAG;MACX,IAAI,CAACZ,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACC,UAAS,GAAI,EAAE;IACtB,CAAC;IACDO,SAASA,CAAA,EAAG;MACVO,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACnB,KAAK,CAAC,CAAC;IAC3D,CAAC;IACDI,SAASA,CAAA,EAAG;MACV,MAAMgB,UAAS,GAAIJ,YAAY,CAACK,OAAO,CAAC,OAAO,CAAC;MAChD,IAAID,UAAU,EAAE;QACd,IAAI,CAACpB,KAAI,GAAIkB,IAAI,CAACI,KAAK,CAACF,UAAU,CAAC;MACrC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}